<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_AppMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_AppMain.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAxhEAAAJNU0Z0AUkBTAIBAQQB
        AAFgAQABYAEAARkBAAEZAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABZAMAATIDAAEBAQABIAUAASAB
        Tv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/AP8A/wD/AM0AAx8BJQN6AYUDWQFkAxQBGAQBAxQBGANZAWQDegGFAyABJkwAAw4B
        EQMJAQswAAOWAaFc/wOWAaF8AAMOAREDkgGdA/oB/AN+AYkEAAM8AUUDdgGCAzwBRQQAA34BiQP6AfwD
        kgGdAw4BEUAAAwQBBQPPAdYDbAF3A0EBSgO+AccDKAEuAyQBKgNJAVMcAANaAWUDpwGxA6cBsQOnAbED
        pwGxA6cBsQOnAbEDpwGxA6cBsQOnAbEDpwGxA6cBsQOnAbEDpwGxA6cBsQOnAbEDpwGxA6cBsQOnAbED
        pwGxA6cBsQOnAbEDpwGxA6cBsQNZAWQMAAMIAQoDXwFqA2cBcgNnAXIDZwFyA2cBcgNnAXIDMwE7DAAD
        MwE7A2cBcgNnAXIDZwFyA2cBcgNnAXIDXwFqAwgBCiAAAx8BJQPWAdwE/wPwAfMDCQELA1MBXQz/A1MB
        XQMJAQsD8AHzBP8D1wHdAx8BJRwAAwsBDQM4AUADOwFEAzsBRAM7AUQDOwFEAzsBRAM7AUQDLAEzA0cB
        UQNEAU0D9gH4A68BuAM1AT0D6gHuBP8DPgFHJAADDQEPA1wBZgMGAQccAAMiASgDSwFVNAADXAFmGP8D
        eAGDDAADeAGDGP8DXAFmHAADFQEZA90B4gj/A8IBygQAA7EBugz/A7EBugQAA8IBygj/A90B4gMVARkU
        AAMUARgD3wHkHP8DuwHDAz0BRgP2AfgDrwG4AzUBPQPqAe4E/wPXAd0DFAEYJAADUgFcBP8DSQFTGAAE
        AgPIAc8D9QH3AwMBBDAAA2MBbhj/A3gBgwwAA3gBgxj/A2MBbhwAA7ABuQz/A88B1gQAA6ABqgz/A50B
        qAQAA9AB1wz/A7ABuRQAA10BaCD/A4oBlQOOAZkDrwG4AzUBPQPqAe4E/wPXAd0DGQEeKAADLwE2BP8D
        eAGDGAADTAFWBP8DhwGSNAADYwFuGP8DeAGDDAADeAGDGP8DYwFuGAADQwFMEP8D/AH9AxYBGgNEAU0M
        /wM9AUYDGgEfA/wB/RD/A0MBTBAAA2UBcAT/A+oB7gMdASIDMQE4Ax4BIwP4AfoDZgFxAzMBOwPUAdoD
        KQEwAzUBPQPqAe4E/wPXAd0DLAEzAwwBDgwAAxQBGBgAAwgBCgP6AfwDpwGxFAADAgEDA88B1gPyAfUD
        FQEZNAADYwFuGP8DeAGDDAADeAGDGP8DYwFuGAADrwG4FP8DhgGRBAADlgGgBP8DjAGXBAADjwGaFP8D
        rwG4EAADZQFwBP8D4gHnA0cBUAT/AzgBQAP1AfcI/wP5AfsDKgExA+oB7gT/A9cB3QMkASoDzAHTA70B
        xQMMAQ4EAAOAAYsE/wNjAW4YAAPRAdgD2QHfFAADVAFeBP8DfwGKOAADYwFuGP8DeAGDDAADeAGDGP8D
        YwFuFAADCgEMA/gB+hT/A/wB/QNDAUwDAwEEA1YBYAMCAQMDSwFVA/0B/hT/A/gB+gMKAQwMAANlAXAE
        /wPjAegDHQEiA2EBbAMXARsD9gH4A4cBkwNiAW0D5QHqAyoBMQPxAfQD1wHdAy0BNANLAVUDeAGDA/oB
        /ANCAUsDgAGLCP8DbQF4GAADoAGqA/0B/gM1AT0MAAMEAQUD1gHcA+8B8gMRARQ4AANjAW4Y/wO4AcAD
        cwF+A3MBfgNzAX4DuAHAGP8DYwFuFAADLwE3HP8D9QH3A04BWAQAA08BWQP3Afkc/wMvATYMAANlAXAI
        /wPHAc4DwwHLA8oB0QT/A9cB3QPFAc0D/AH9A6UBrwMqATEDLwE3A8wB0wP8Af0DWQFjAykBMAOAAYsI
        /wOHAZMDDQEQGAADHwElAxwBIQN0AX8DkgGdAxIBFQQAA1wBZgT/A3YBgjwAA2MBbkT/A2MBbhQAA0MB
        TCT/A88B1gP9Af4g/wNDAUwMAANlAXAE/wP9Af4DvgHHA7sBwwPBAckE/wPQAdcDuwHDA7sBwwO7AcMD
        5AHpCP8D+gH8A1IBXAOAAYsI/wOHAZMDTAFWA+UB6gMEAQUQAAMNAQ8DiwGWA/gB+gMZAR4E/wPqAe4D
        bAF3A94B4wPqAe4DDQEQNAADJAEqBAADYwFuRP8DYwFuBAADJAEqDAADQQFKTP8DQQFKDAADZQFwBP8D
        4wHoAx8BJANpAXQDGQEdA/UB9wOOAZkDaQF0A2kBdANpAXQDuQHCCP8DcAF7A30BiAj/A4cBkwNMAVYD
        +QH7A6IBrBAAA0wBVgPhAeYD2AHeA0ABSQQBA28Begz/A28BejQAA2EBbAT/A38BigMZAR0DxQHMPP8D
        xQHMAxkBHQN/AYoE/wNhAWwIAAMuATVM/wMtATQMAANlAXAE/wPiAecDRwFQBP8DOAFAA/UB9xz/AzwB
        RQPlAeoE/wOHAZMDTAFWA/kB+wOkAa4DMgE6AwwBDggAA14BaQT/A5wBpgMIAQoIAAOFAZAI/wPkAekD
        CgEMNAAD2wHgCP8DqAGyAxMBFwOdAag0/wOdAagDEwEXA6gBsgj/A9sB4AgAAwwBDgP8Af1E/wP8Af0D
        DAEODAADZQFwBP8D6wHvAyIBKAMxATgDIwEpA/gB+gNmAXEDMQE4AzEBOAMxATgDMQE4AzEBOANdAWgD
        qwG1AzMBOwNZAWQDAgEDA6wBtgOXAaIDHwElA+4B8QM8AUUIAAMUARgDzwHWA8UBzQMOAREEAAMWARoD
        8wH2CP8DZgFxDAADBgEHA1ABWgORAZwDqQGzA5gBowNdAWgDDQEQEAADGgEfA8kB0Aj/A8sB0gMcASED
        cQF8A/wB/ST/A/wB/QNxAXwDHAEhA8sB0gj/A8kB0AMZAR4MAAPJAdBE/wPJAdAQAANlAXA4/wPYAd4D
        HgEjEAADJAEqEAADFAEYA88B1gPFAcwDDgERA4YBkQj/A98B5AMIAQkIAAM1AT0D2QHfFP8D6gHuA1AB
        WhAAAwoBDAOlAa8I/wPkAekDNAE8A0cBUAPwAfMc/wPwAfMDRwFQAzQBPAPkAekI/wOkAa4DCgEMEAAD
        dgGCRP8DdQGBEAADZQFwBP8D9QH3A2wBdwNpAXQDbwF6A/wB/QOOAZkDaQF0A2kBdANpAXQDuQHCEP8D
        KQEwKAADFAEYA2MBbgOHAZID9wH5CP8DXgFpCAADNwE/A/UB9xz/A/0B/gNZAWMQAAQCA3sBhwP9Af4E
        /wP2AfgDVgFgAygBLgPZAd8U/wPZAd8DKAEuA1YBYAP2AfgI/wOWAaAEAhQAAx0BIgP6Afw8/wP6AfwD
        HQEiEAADZQFwBP8D4gHnAzUBPQO7AcMDKgExA/UB9wPQAdcDuwHDA7sBwwO7AcMD5AHpEP8DKQEwJAAD
        FQEZA48BmgOrAbUDTQFXA1oBZQT/A9gB3gMFAQYEAAMIAQoD3gHjGP8D6gHuA9UB2wT/A/UB9wMcASEU
        AANTAV0D9QH3CP8DfwGKAxQBGAO5AcIM/wO5AcIDFAEYA38BihD/A2MBbhwAA50BqDz/A50BpxQAA2UB
        cAT/A+IB5wM4AUADwwHLAywBMwP1AfcD1wHdA8MBywPDAcsDwwHLA8MBywPDAcsD1QHbCP8DKQEwJAAD
        wwHLCP8D/QH+Az0BRgPCAcoDXAFmCAADWQFkGP8D6QHtAy8BNwOoAbII/wOEAY8YAAMxATkD4wHoCP8D
        qAGyAxABEwOPAZoE/wOQAZsDEAETA6gBshT/A2MBbhwAAx8BJAP1Afcc/wPUAdoU/wP1AfcDHwEkFAAD
        ZQFwBP8D8wH2A2QBbwNhAWwDZwFyA/wB/QOHAZMDYQFsA2EBbANhAWwDYQFsA2EBbAOAAYwI/wMpATAg
        AAMQARMQ/wOAAYsDjgGZAzsBQwgAA50BqBT/A+kB7QMvATcDnQGnDP8DzAHTHAADGQEeA8kB0Aj/A8sB
        0gMbASADMQE5AxsBIAPLAdII/wP8Af0M/wNjAW4gAANuAXkc/wNHAVEDiwGWEP8DbgF5GAADZQFwPP8D
        KQEwIAAEAgPZAd8M/wNQAVoDsgG8AzsBQwgAA7kBwhT/Az4BRwOdAacQ/wPpAe0gAAMKAQwDpQGvCP8D
        5AHpA14BaQPkAekI/wOjAa0DiQGUDP8DYwFuIAADAgEDA7IBvBj/A0YBTwQBA3oBhgj/A7IBvAMCAQMY
        AANlAXAI/wPlAeoDSQFTAzEBOAMxATgDMQE4AzEBOAMxATgDMQE4Ay8BNgNpAXQD/AH9CP8DKQEwJAAD
        KgExA70BxQPbAeADdgGCAzwBRQP8Af0DLQE0CAADqgG0FP8DJQErA/kB+xD/A9kB3yQABAIDegGGA/0B
        /gz/A/0B/gN6AYUEAgN+AYkM/wNjAW4kAAMQARMD0gHZFP8DRgFPCAADaAFzA70BxgMQARMcAANJAVMI
        /wNfAWoDpwGxGP8D/QH+A2cBcgOgAaoE/wP5AfsDEwEXMAADMQE5A/IB9QN4AYMMAANxAXwU/wMlASsD
        +QH7EP8DnQGnLAADUgFcA/UB9wT/A/UB9wNSAVwIAAN+AYkM/wNjAW4oAAMbASAD3AHhEP8DRgFPMAAE
        AgOBAY0D1gHcAzsBRAPhAeYc/wOcAaYDcAF7A84B1QNVAV8wAAMhAScD5wHrA5QBnwQBDAADGQEdA/UB
        9xD/AyUBKwP5AfsQ/wM5AUEwAAMkASoDYQFsAyQBKgwAAyMBKQNcAWYDXAFmA1wBZgMaAR8sAAMaAR8D
        0QHYDP8DRgFPQAADSwFVA50BpwPLAdIM/wOyAbwDmAGjAygBLzgAAxMBFwPYAd4DrgG3AwQBBRQAA2kB
        dBD/AyUBKwP5AfsM/wOUAZ+QAAMPARIDsQG7CP8DRgFPSAADIwEpA+gB7AT/A8UBzQMIAQlAAAM5AUED
        rwG4AwoBDBwAA3QBfwP8Af0I/wPKAdEM/wOXAaIDBQEGlAADAgEDA3ABewPtAfADKwEyTAADDAEOAyoB
        MQMDAQRwAAMsATMDmAGjA+EB5QP8Af0D6AHsA6gBsgM/AUgQAAFCAU0BPgcAAT4DAAEoAwABZAMAATID
        AAEBAQABAQUAASABAxYAA///AJIABP8BgAE/Af8B+QH/AeAGAAP/Af4BEQEPAf8B8AEPAeAGAAHgARwB
        AwH8AQABBwHwAQABBwH8AX8BPwHwAwAB4AEcAQMB+AEgAYMB4AEAAQcB/AF+AR8B8AMAAeABHAEDAfgB
        IAGDAeABAAEPAfwBfgE/AfADAAHgARwBAwHwAQABAQHgAQABDgH8AXwBPwHwAwAB4AEcAQMB8AERAQEB
        4AEAAQQBfgF8AX8B8AMAAeABHAEDAeACAAHgAgABfgE4AX8B8AMAAeABAAEDAeABBAEAAeACAAF+AQgB
        /wHwAwAB4AEAAQMB4AIAAeACAAE8AQAB/wHwAwABoAEAAQIB4AIAAeACAAF4AQEB/wHwBgABYAIAAeAC
        AAEwAcEB/wHwBgABYAIAAeACAAEwAYMBgAHwBgABcAEAAQEB4AEAAQ8BeAEDAQABcAMAAYACAAHwAQAB
        AQHgAQABDwH8AQYBAAEwAwABwAEAAQEB8AEAAQEB4AEAAQ8B+AEEAQABEAMAAfABAAEDAfgBAAEDAeAB
        AAEPAfgBDAEAARADAAH4AQABAwH4AQABAwHgAQABDwHwAQwBAAEQAwAB/AEAAQMB/AEAAQcB4AEAAQ8B
        8AEMAQABEAMAAf4BAAEDAfwBAAEHAeABAAEPAfgBDAEAARADAAH/AQABAwH+AQEBjwHgAQABDwH/ARwB
        AAEQAwAB/wHBAYMB/wEBAf8B4AEAAR8B/gEcAQABEAMAAf8B4wGDAf8BgQH/Af4BAAH/AfwBPgEAATAD
        AAT/AcEC/wGDAf8B/AF/AQABMAMABP8B4QL/AccD/wGAAfADAAs=
</value>
  </data>
</root>