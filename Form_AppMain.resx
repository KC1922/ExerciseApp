<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_AppMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_AppMain.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAANBUAAAJNU0Z0AUkBTAIBAQUB
        AAFoAQABaAEAARkBAAEZAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABZAMAATIDAAEBAQABIAUAASAB
        TioAAw0BDwNFAU4DQQFKAwkBC/8AfQADOQFBA+kB7Qj/A+IB5wMvATf/AHUAAwgBCQPjAegQ/wPZAd8D
        AwEE/wBxAANXAWEY/wMoAS8MAAMhAScDbgF5A3IBfQMoAS7/AFUAA4cBkhj/Ax8BJAgAA00BVwP4AfoI
        /wP6AfwDWQFk/wBRAAMrATID6AHsEP8D3AHhCAADCAEKA+sB7xD/A/IB9QMQARP/AFEAAwgBCQNHAVED
        nQGnA/AB8wP5AfsDXAFmCAADLAEzGP8DZwFy/wBFAAMGAQcDSgFUAzYBPgMCAQMIAAMHAQgDDQEPDAAD
        FwEbA/0B/hT/A4ABjP8ARQADnQGnCP8D4QHmA4cBkwM1AT0EAhQAA80B1Az/A/0B/gO9AcYDGQEd/wBB
        AAMYARwD+gH8FP8D2AHeAyEBJxAAAzwBRQPVAdsDxQHMA20BeAMfAST/AEkAA3ABexz/A4MBjiQAAxYB
        GgNhAWwDeAGDAxQBGP8ANQAEAQPSAdkc/wOJAZQYAAMUARgDYQFsA7gBwQP8Af0I/wO5AcL/ADUAAy8B
        NiD/A4cBkxQAAzUBPQP1AfcY/wMmASz/ADEAA34BiSD/A4EBjRQAA4cBkxz/A4EBjf8AMQADwQHJIP8D
        bwF6FAADhwGTHP8D4gHnAwMBBP8ALQAD7QHwIP8DTAFWFAADhwGSIP8DPQFG/wAtAAP8Af0g/wMbASAU
        AAOAAYsg/wOLAZb/AC0AA+UB6hz/A8gBzxgAA2oBdSD/A8sB0v8ALQADogGsHP8DVQFfGAADRQFOIP8D
        8gH1/wAtAAMvATcD+gH8FP8DtAG9BAIYAAMTARYD/AH9HP8D+gH8/wAxAANXAWED9QH3DP8DtQG+Aw4B
        ESAAA7QBvRz/A90B4v8ANQADGQEdA2cBcgN5AYQDQgFLBAIkAAM9AUYc/wOQAZv/AHEAA5ABmxT/A+8B
        8gMeASP/AHEAAwMBBAOGAZED+gH8CP8D2wHgAzQBPP8AfQADGgEfA0sBVQM7AUMDBQEG/wC5AAMbASUD
        VgGFA0ABZAMSARgEAQMSARgDQAFkA1YBhQMcASZMAAMNAREDCQELMAADbQGhXP8DbQGhfAADDQERA2kB
        nQP1AfwDWQGJBAADLgFFA1MBggMuAUUEAANZAYkD9QH8A2kBnQMNARFAAAMEAQUDrwHWA0wBdwMxAUoD
        lwHHAyABLgMeASoDNgFTHAADQQFlA34BsQN+AbEDfgGxA34BsQN+AbEDfgGxA34BsQN+AbEDfgGxA34B
        sQN+AbEDfgGxA34BsQN+AbEDfgGxA34BsQN+AbEDfgGxA34BsQN+AbEDfgGxA34BsQN+AbEDQAFkDAAD
        CAEKA0MBagNJAXIDSQFyA0kBcgNJAXIDSQFyAygBOwwAAygBOwNJAXIDSQFyA0kBcgNJAXIDSQFyA0MB
        agMIAQogAAMbASUDuQHcBP8D5AHzAwkBCwM8AV0M/wM8AV0DCQELA+QB8wT/A7kB3QMbASUcAAMKAQ0D
        KwFAAy4BRAMuAUQDLgFEAy4BRAMuAUQDLgFEAyQBMwM1AVEDMwFNA+0B+AOFAbgDKgE9A9gB7gT/Ay8B
        RyQAAwwBDwNCAWYDBgEHHAADHQEoAzcBVTQAA0IBZhj/A1UBgwwAA1UBgxj/A0IBZhwAAxMBGQPDAeII
        /wOdAcoEAAOHAboM/wOHAboEAAOdAcoI/wPDAeIDEwEZFAADEgEYA8UB5Bz/A5MBwwMvAUYD7QH4A4UB
        uAMqAT0D2AHuBP8DuQHdAxIBGCQAAzwBXAT/AzYBUxgABAIDpAHPA+sB9wMDAQQwAANGAW4Y/wNVAYMM
        AANVAYMY/wNGAW4cAAOHAbkM/wOvAdYEAAN2AaoM/wNzAagEAAOvAdcM/wOHAbkUAANCAWgg/wNjAZUD
        ZQGZA4UBuAMqAT0D2AHuBP8DuQHdAxYBHigAAyUBNgT/A1UBgxgAAzgBVgT/A2ABkjQAA0YBbhj/A1UB
        gwwAA1UBgxj/A0YBbhgAAzIBTBD/A/kB/QMTARoDMwFNDP8DLwFGAxcBHwP5Af0Q/wMyAUwQAANHAXAE
        /wPYAe4DGQEiAycBOAMaASMD8QH6A0gBcQMoATsDtAHaAyIBMAMqAT0D2AHuBP8DuQHdAyQBMwMLAQ4M
        AAMSARgYAAMIAQoD9QH8A34BsRQAAwIBAwOvAdYD6AH1AxMBGTQAA0YBbhj/A1UBgwwAA1UBgxj/A0YB
        bhgAA4UBuBT/A18BkQQAA2wBoAT/A2QBlwQAA2cBmhT/A4UBuBAAA0cBcAT/A8wB5wM0AVAE/wMrAUAD
        6wH3CP8D8wH7AyIBMQPYAe4E/wO5Ad0DHgEqA6oB0wOVAcUDCwEOBAADWgGLBP8DRgFuGAADsAHYA70B
        3xQAAzwBXgT/A1oBijgAA0YBbhj/A1UBgwwAA1UBgxj/A0YBbhQAAwkBDAPxAfoU/wP5Af0DMgFMAwMB
        BAM+AWADAgEDAzcBVQP7Af4U/wPxAfoDCQEMDAADRwFwBP8DzgHoAxkBIgNFAWwDFAEbA+0B+ANgAZMD
        RgFtA88B6gMiATED5gH0A7kB3QMkATQDNwRVAYMD9QH8AzEBSwNaAYsI/wNNAXgYAAN2AaoD+wH+AyoB
        PQwAAwQBBQO5AdwD4gHyAw8BFDgAA0YBbhj/A5ABwANRAX4DUQF+A1EBfgOQAcAY/wNGAW4UAAMmATcc
        /wPrAfcDOQFYBAADOgFZA+8B+Rz/AyUBNgwAA0cBcAj/A6MBzgOdAcsDpwHRBP8DuQHdA6ABzQP5Af0D
        ewGvAyIBMQMmATcDqgHTA/kB/QNAAWMDIgEwA1oBiwj/A2ABkwMMARAYAAMbASUDGAEhA1IBfwNpAZ0D
        EAEVBAADQgFmBP8DUwGCPAADRgFuRP8DRgFuFAADMgFMJP8DrwHWA/sB/iD/AzIBTAwAA0cBcAT/A/sB
        /gOXAccDkwHDA5oByQT/A68B1wOTAcMDkwHDA5MBwwPOAekI/wP1AfwDPAFcA1oBiwj/A2ABkwM4AVYD
        zwHqAwQBBRAAAwwBDwNjAZYD8QH6AxYBHgT/A9gB7gNMAXcDxQHjA9gB7gMMARA0AAMeASoEAANGAW5E
        /wNGAW4EAAMeASoMAAMxAUpM/wMxAUoMAANHAXAE/wPOAegDGgEkA0oBdAMWAR0D6wH3A2UBmQNKAXQD
        SgF0A0oBdAORAcII/wNPAXsDWAGICP8DYAGTAzgBVgPzAfsDeAGsEAADOAFWA8oB5gO6Ad4DMAFJBAED
        TgF6DP8DTgF6NAADRQFsBP8DWgGKAxYBHQOgAcw8/wOgAcwDFgEdA1oBigT/A0UBbAgAAyUBNUz/AyQB
        NAwAA0cBcAT/A8wB5wM0AVAE/wMrAUAD6wH3HP8DLgFFA88B6gT/A2ABkwM4AVYD8wH7A3oBrgMoAToD
        CwEOCAADQwFpBP8DcwGmAwgBCggAA14BkAj/A84B6QMJAQw0AAO/AeAI/wN+AbIDEgEXA3MBqDT/A3MB
        qAMSARcDfgGyCP8DvwHgCAADCwEOA/kB/UT/A/kB/QMLAQ4MAANHAXAE/wPZAe8DHQEoAycBOAMdASkD
        8QH6A0gBcQMnATgDJwE4AycBOAMnATgDJwE4A0IBaAOBAbUDKAE7A0ABZAMCAQMDgwG2A24BogMbASUD
        4AHxAy4BRQgAAxIBGAOvAdYDoAHNAw0BEQQAAxMBGgPoAfYI/wNIAXEMAAMGAQcDOgFaA2kBnAOAAbMD
        bwGjA0IBaAMMARAQAAMXAR8DpgHQCP8DpwHSAxgBIQNPAXwD+QH9JP8D+QH9A08BfAMYASEDpwHSCP8D
        pgHQAxYBHgwAA6YB0ET/A6YB0BAAA0cBcDj/A7oB3gMaASMQAAMeASoQAAMSARgDrwHWA6ABzAMNARED
        XwGRCP8DxQHkAwcBCQgAAyoBPQO9Ad8U/wPYAe4DOgFaEAADCQEMA3sBrwj/A84B6QMpATwDNAFQA+QB
        8xz/A+QB8wM0AVADKQE8A84B6Qj/A3oBrgMJAQwQAANTAYJE/wNSAYEQAANHAXAE/wPrAfcDTAF3A0oB
        dANOAXoD+QH9A2UBmQNKAXQDSgF0A0oBdAORAcIQ/wMiATAoAAMSARgDRgFuA2ABkgPvAfkI/wNDAWkI
        AAMrAT8D6wH3HP8D+wH+A0ABYxAABAIDVwGHA/sB/gT/A+0B+AM+AWADIAEuA70B3xT/A70B3wMgAS4D
        PgFgA+0B+Aj/A2wBoAQCFAADGQEiA/UB/Dz/A/UB/AMZASIQAANHAXAE/wPMAecDKgE9A5MBwwMiATED
        6wH3A68B1wOTAcMDkwHDA5MBwwPOAekQ/wMiATAkAAMTARkDZwGaA4EBtQM4AVcDQQFlBP8DugHeAwUB
        BgQAAwgBCgPFAeMY/wPYAe4DtwHbBP8D6wH3AxgBIRQAAzwBXQPrAfcI/wNaAYoDEgEYA5EBwgz/A5EB
        wgMSARgDWgGKEP8DRgFuHAADcwGoPP8DcwGnFAADRwFwBP8DzAHnAysBQAOdAcsDJAEzA+sB9wO5Ad0D
        nQHLA50BywOdAcsDnQHLA50BywO3AdsI/wMiATAkAAOdAcsI/wP7Af4DLwFGA50BygNCAWYIAANAAWQY
        /wPYAe0DJgE3A34Bsgj/A10BjxgAAycBOQPOAegI/wN+AbIDDwETA2cBmgT/A2gBmwMPARMDfgGyFP8D
        RgFuHAADGgEkA+sB9xz/A7QB2hT/A+sB9wMaASQUAANHAXAE/wPoAfYDRwFvA0UBbANJAXID+QH9A2AB
        kwNFAWwDRQFsA0UBbANFAWwDRQFsA1sBjAj/AyIBMCAAAw8BExD/A1oBiwNlAZkDLQFDCAADcwGoFP8D
        2AHtAyYBNwNzAacM/wOqAdMcAAMWAR4DpgHQCP8DpwHSAxgBIAMnATkDGAEgA6cB0gj/A/kB/Qz/A0YB
        biAAA00BeRz/AzUBUQNjAZYQ/wNNAXkYAANHAXA8/wMiATAgAAQCA70B3wz/AzoBWgOIAbwDLQFDCAAD
        kQHCFP8DLwFHA3MBpxD/A9gB7SAAAwkBDAN7Aa8I/wPOAekDQwFpA84B6Qj/A3kBrQNiAZQM/wNGAW4g
        AAMCAQMDiAG8GP8DNAFPBAEDVgGGCP8DiAG8AwIBAxgAA0cBcAj/A88B6gM2AVMDJwE4AycBOAMnATgD
        JwE4AycBOAMnATgDJQE2A0oBdAP5Af0I/wMiATAkAAMiATEDlQHFA78B4ANTAYIDLgFFA/kB/QMkATQI
        AAOAAbQU/wMfASsD8wH7EP8DvQHfJAAEAgNWAYYD+wH+DP8D+wH+A1YBhQQCA1kBiQz/A0YBbiQAAw8B
        EwOzAdkU/wM0AU8IAANKAXMDlwHGAw8BExwAAzYBUwj/A0MBagN+AbEY/wP7Af4DSQFyA3YBqgT/A/MB
        +wMSARcwAAMnATkD6AH1A1UBgwwAA08BfBT/Ax8BKwPzAfsQ/wNzAacsAAM8AVwD6wH3BP8D6wH3AzwB
        XAgAA1kBiQz/A0YBbigAAxgBIAPAAeEQ/wM0AU8wAAQCA1sBjQO5AdwDLgFEA8oB5hz/A3MBpgNPAXsD
        rAHVAz0BXzAAAxwBJwPUAesDawGfBAEMAAMWAR0D6wH3EP8DHwErA/MB+xD/AywBQTAAAx4BKgNFAWwD
        HgEqDAADHQEpA0IBZgNCAWYDQgFmAxcBHywAAxcBHwOwAdgM/wM0AU9AAAM3AVUDcwSnAdIM/wOIAbwD
        bwGjAyEBLzgAAxIBFwO6Ad4DhQG3AwQBBRQAA0oBdBD/Ax8BKwPzAfsM/wNrAZ+QAAMOARIDiAG7CP8D
        NAFPSAADHQEpA9YB7AT/A6ABzQMHAQlAAAMsAUEDhQG4AwkBDBwAA1IBfwP5Af0I/wOnAdEM/wNuAaID
        BQEGlAADAgEDA08BewPcAfADIwEyTAADCwEOAyIBMQMDAQRwAAMkATMDbwGjA8gB5QP5Af0D1gHsA34B
        sgMwAUgQAAFCAU0BPgcAAT4DAAEoAwABZAMAATIDAAEBAQABAQUAASABAxYAA/8BAAH8AT8B/wGADAAB
        +AEfAf8BgAwAAfABDwH/AYAMAAHwAQ4BHwGADAAB8AEMAQ8BgAwAAfABGAEHAYAMAAH4ARgBBwGADAAB
        wwE4AQcBgAwAAcABfAEHAYAMAAGAATwBHwGADAABgAE/AeEBgA0AAT8BAQGADQABPgEAAYANAAE+AQAB
        gA0AAT4PAAE+DwABPg8AAX4PAAF+DwABfg4AAYAB/w4AAcEB/w4AAv8BgA0AAv8CgAwAAv8B4QGADAAE
        /wGAAT8B/wH5Af8B4AYAA/8B/gERAQ8B/wHwAQ8B4AYAAeABHAEDAfwBAAEHAfABAAEHAfwBfwE/AfAD
        AAHgARwBAwH4ASABgwHgAQABBwH8AX4BHwHwAwAB4AEcAQMB+AEgAYMB4AEAAQ8B/AF+AT8B8AMAAeAB
        HAEDAfABAAEBAeABAAEOAfwBfAE/AfADAAHgARwBAwHwAREBAQHgAQABBAF+AXwBfwHwAwAB4AEcAQMB
        4AIAAeACAAF+ATgBfwHwAwAB4AEAAQMB4AEEAQAB4AIAAX4BCAH/AfADAAHgAQABAwHgAgAB4AIAATwB
        AAH/AfADAAGgAQABAgHgAgAB4AIAAXgBAQH/AfAGAAFgAgAB4AIAATABwQH/AfAGAAFgAgAB4AIAATAB
        gwGAAfAGAAFwAQABAQHgAQABDwF4AQMBAAFwAwABgAIAAfABAAEBAeABAAEPAfwBBgEAATADAAHAAQAB
        AQHwAQABAQHgAQABDwH4AQQBAAEQAwAB8AEAAQMB+AEAAQMB4AEAAQ8B+AEMAQABEAMAAfgBAAEDAfgB
        AAEDAeABAAEPAfABDAEAARADAAH8AQABAwH8AQABBwHgAQABDwHwAQwBAAEQAwAB/gEAAQMB/AEAAQcB
        4AEAAQ8B+AEMAQABEAMAAf8BAAEDAf4BAQGPAeABAAEPAf8BHAEAARADAAH/AcEBgwH/AQEB/wHgAQAB
        HwH+ARwBAAEQAwAB/wHjAYMB/wGBAf8B/gEAAf8B/AE+AQABMAMABP8BwQL/AYMB/wH8AX8BAAEwAwAE
        /wHhAv8BxwP/AYAB8AMACw==
</value>
  </data>
</root>